export const LINKS = [{ name: 'Blog', to: '/', withHeader: true, withFooter: true }];

export const VERCEL_KV_DOC_LIST_KEY = 'doc_list';
export const VERCEL_KV_BLOG_KEY = 'blog_dev';

export const TIPTAP_APP_ID = 'W9N461MO';

export * from './text';
export * from './code';

export const THE_HISTORY_OF_MY_BLOG_TITLE = `<h1>The history of my blog</h1>`;
export const THE_HISTORY_OF_MY_BLOG_CONTENT = `
<p>It has been two years since I first developed with front-end.
Before then, I only heard about HTML, CSS and JavaScript and known little about them.
The reason I came to learn front-end was that I want to build a blog for myself.
As a developer joke, the most time of a programmer is wasting on building blogs and it maybe useless.</p>

<p>In the past of few years, I have build 3...5 blogs using different stack.
This post will focus on why I build one blog after another instead of introducing the frameworks.
Let's come into the history of my blog.</p>

<h1>The first blog</h1>

<blockquote>Stack: Spring, Thymeleaf, Semantic-UI</blockquote>

<p>I built the first blog according to a course on bilibili.
The teacher is a back-end developer and the whole blog was build only using Spring tool chains without front-end framework like React.js.
The data are stored in a database managing by SpringBoot and you can write a blog and save it online and make a comment in a published blog.</p>

<p>The pages are generated by Thymeleaf and there is no concept like components so you should write every page from 0.
This is painful because the layout of different page are same leading to a lot of duplicated code between pages.
When you modify the layout, you need to copy theme to every page!</p>

<p>I have bought a domain and a cloud-server to host this blog. But unfortunately, I didn't maintain it.</p>

<p>At that time, I didn't know that there are a lot of front-end frameworks that can reduce duplicated codes.</p>

<h1>The second blog</h1>

<blockquote>Stack: Spring, Vue.js, Element-UI</blockquote>

<p>The purpose of building the second blog is to learn Vue.js. As we always say, The quickest way to learn a framework is to use it.
Vue.js does help me a lot. I didn't need to write layout over and over again.</p>

<p>The features of this blog is almost same as the first blog. I'd rather like to call it the refactor of the first blog.</p>

<h1>The third blog</h1>

<blockquote>Stack: React.js, Gatsby.js, GraphQL, Algolia, Disqus</blockquote>

<p>Like the second blog, this blog is built in purpose of learning React.js.
This blog is a static blog without back-end. Gatsby uses graphql to get data and bundled all of the static data to generate a static site.</p>

<p>I also used some tools to transform markdown to site like <a href="https://hexo.io/">Hexo</a>, <a href="https://jekyllrb.com/">Jekyll</a>, 
<a href="https://gohugo.io/">Hugo</a> and so on.
You can build a blog in 3 minutes using them, but the style of the blog are all the same. The customization is really a big problem for me.</p>

<h1>The fourth blog</h1>

<blockquote>Stack: React.js, Next.js, styled-components</blockquote>

<p>Before I built the fourth blog, <strong>I start to think about whether I really need a back-end</strong>.
Most of the work can be solved with third party services.
You can add a search service with algolia, a comment service with disqus and deploy your blog on github or vercel...</p>

<p>A blog without back-end is much more lightweight and front-end is much easier to deploy than back-end.
Most importantly, It meets all my needs.</p>

<h1>This one - I hope it's the last one</h1>

<blockquote>Stack: Remix.js, Tailwind css</blockquote>

<p>At the end of last year, Remix.js was open source.
The use of Remix.js is similar with Next.js, but you don't need to write \`<Layout />\` in every page.
Remix.js is a new thing and it really surprised me.</p>

<h1>One more thing</h1>

<p>Although building blog is a good way to learn new frameworks, I think it is more important to develop a habit to write blogs.
New technology emerge in endlessly, but the underlying technology are all the same.</p>

<p>And I really don't want to build a new blog at all !!!</p>
`;
